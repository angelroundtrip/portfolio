{"ast":null,"code":"var _jsxFileName = \"/Users/angel/Development/personal-projects/portfolio/src/components/Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PostList from './PostList';\nimport SearchBar from './SearchBar'; // import NewPostForm from './NewPostForm'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PostForm(_ref) {\n  _s();\n\n  let {\n    user,\n    location,\n    handleDeletePosts,\n    weatherData\n  } = _ref;\n  const [postContent, setPostContent] = useState(\"\");\n  const [posts, setPosts] = useState([]); // console.log(posts)\n\n  const addNewPosts = newObj => {\n    fetch(`/posts`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newObj)\n    }).then(r => r.json()).then(post => {\n      setPosts([post, ...posts]);\n    });\n  };\n\n  const submitNewPost = e => {\n    e.preventDefault();\n    const newPost = {\n      post_content: postContent,\n      user_id: user.id,\n      location_id: location.id\n    };\n    addNewPosts(newPost);\n    setPostContent(\"\"); // console.log(newPost)\n  }; // * Renders all posts\n\n\n  useEffect(() => {\n    fetch(`/posts`).then(r => r.json()).then(setPosts);\n  }, []); // * Search function by location\n\n  const [locationData, setLocationData] = useState([]);\n  const [search, setSearch] = useState('');\n  useEffect(() => {\n    fetch('/posts').then(response => response.json()).then(setLocationData);\n  }, []);\n\n  const addPost = post => setPosts([post, ...posts]);\n\n  const changeSearch = e => setSearch(e.target.value);\n\n  const filteredSearch = locationData.filter(locationObj => {\n    const search1 = locationObj.user.home_location.toLowerCase();\n    const search2 = search.toLowerCase();\n    return search1.includes(search2);\n  }); //  console.log(filteredSearch)\n  //  console.log(posts) \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitNewPost,\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        changeSearch: changeSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setPostContent(e.target.value),\n        style: {\n          width: '80%'\n        },\n        type: \"text\",\n        name: \"postContent\",\n        placeholder: \"A cool event this weekend? Had a great meal at a restaurant? Traveling somewhere? Share what's happening around town!\",\n        value: postContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          width: '10%'\n        },\n        children: \" Add Post \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(PostList // * currently breaks either search or posts (without manual refresh)\n      , {\n        posts: posts // posts={filteredSearch}\n        ,\n        user: user,\n        handleDeletePosts: handleDeletePosts,\n        weatherData: weatherData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PostForm, \"/O+F2/KC4mbDpuG6iDuNL+UMKWY=\");\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["/Users/angel/Development/personal-projects/portfolio/src/components/Post.js"],"names":["React","useState","useEffect","PostList","SearchBar","PostForm","user","location","handleDeletePosts","weatherData","postContent","setPostContent","posts","setPosts","addNewPosts","newObj","fetch","method","headers","body","JSON","stringify","then","r","json","post","submitNewPost","e","preventDefault","newPost","post_content","user_id","id","location_id","locationData","setLocationData","search","setSearch","response","addPost","changeSearch","target","value","filteredSearch","filter","locationObj","search1","home_location","toLowerCase","search2","includes","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport PostList from './PostList'\nimport SearchBar from './SearchBar'\n// import NewPostForm from './NewPostForm'\n\n\nfunction PostForm({user, location, handleDeletePosts, weatherData}) {\n\n  const [postContent, setPostContent] = useState(\"\")\n  const [posts, setPosts] = useState([])\n  // console.log(posts)\n  \n  const addNewPosts = newObj => {\n    fetch(`/posts`, {\n      method: 'POST', \n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify(newObj)\n    })\n    .then(r => r.json())\n    .then(post => {setPosts([post, ...posts])\n    })\n  }\n\n  const submitNewPost = (e) => {\n    e.preventDefault()\n    const newPost = {\n      post_content: postContent,\n      user_id: user.id,\n      location_id: location.id\n    }\n    addNewPosts(newPost)\n    setPostContent(\"\")\n    // console.log(newPost)\n  }\n\n  // * Renders all posts\n  useEffect(()=>{\n    fetch(`/posts`)\n    .then(r=>r.json())\n    .then(setPosts)\n  }, [])\n\n   // * Search function by location\n   const [locationData, setLocationData] = useState([])\n   const [search, setSearch] = useState('')\n\n   useEffect(() => {\n     fetch('/posts')\n       .then(response => response.json())\n       .then(setLocationData)\n   }, [])\n\n  const addPost = (post) => setPosts([post, ...posts])\n  const changeSearch = (e) => setSearch(e.target.value)\n  \n \n   const filteredSearch = locationData.filter(locationObj => {\n     const search1 = locationObj.user.home_location.toLowerCase()\n     const search2 = search.toLowerCase()\n     return search1.includes(search2)\n   })\n  //  console.log(filteredSearch)\n  //  console.log(posts) \n\n  return(\n    <div>\n\n      <form onSubmit={submitNewPost}> \n\n      <SearchBar changeSearch={changeSearch} />\n\n      {/* <NewPostForm addPost={addPost} user={user} onSubmit={submitNewPost}/>  */}\n\n      <p></p> \n\n      \n      <input \n        onChange={(e)=>setPostContent(e.target.value)} \n        style={{width: '80%'}}\n        type=\"text\" \n        name=\"postContent\" \n        placeholder=\"A cool event this weekend? Had a great meal at a restaurant? Traveling somewhere? Share what's happening around town!\"\n        value={postContent}\n      />\n      <button type=\"submit\" style={{width: '10%'}}> Add Post </button>\n   \n      <PostList \n      // * currently breaks either search or posts (without manual refresh)\n        posts={posts} \n        // posts={filteredSearch}\n        user={user} \n        handleDeletePosts={handleDeletePosts} \n        weatherData={weatherData}\n      />\n    \n      </form>\n    </div>\n  )\n}\n\nexport default PostForm\n"]},"metadata":{},"sourceType":"module"}